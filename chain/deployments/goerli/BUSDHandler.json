{
  "address": "0x0bE4B8c82d89CBeAf0a2D969244e3db27a3925De",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_contractaddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "InsufficientBalance",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransactionFailed",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TransactionSuccesful",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recepient",
          "type": "address"
        }
      ],
      "name": "proxyTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x3048ad9b3f1ca503771a19b168ed8d66366f7f010101407717cce49457a2c63e",
  "receipt": {
    "to": null,
    "from": "0x1cC25230ff67F67e13DF3d7C5F92Ea336BbE75C9",
    "contractAddress": "0x0bE4B8c82d89CBeAf0a2D969244e3db27a3925De",
    "transactionIndex": 15,
    "gasUsed": "256931",
    "logsBloom": "0x
    "blockHash": "0x6ecfb4fc77f459b20861de204ce0ca541e33206afeeb3595508c040f3a93768f",
    "transactionHash": "0x3048ad9b3f1ca503771a19b168ed8d66366f7f010101407717cce49457a2c63e",
    "logs": [],
    "blockNumber": 9450777,
    "cumulativeGasUsed": "5085950",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x6FBed897995A96E42874F3E103793e67726888E1"
  ],
  "numDeployments": 2,
  "solcInputHash": "211ec56ce6fbedef952ab4c821af16c3",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractaddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransactionFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TransactionSuccesful\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recepient\",\"type\":\"address\"}],\"name\":\"proxyTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BUSDHandler.sol\":\"BUSDHandler\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"contracts/BUSDHandler.sol\":{\"content\":\"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\\npragma solidity 0.8.17;\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nerror InsufficientBalance();\\nerror TransactionFailed();\\n\\n\\ncontract BUSDHandler {\\n    address owner;\\n    address immutable _address;\\n    event TransactionSuccesful(address indexed sender,address indexed receiver, uint256 indexed amount );\\n    \\n    constructor(address _contractaddress){\\n        owner = msg.sender;\\n        _address =_contractaddress;\\n    }\\n\\n    function proxyTransfer(uint amount, address recepient)external{\\n        if(IERC20(_address).balanceOf(msg.sender) < amount){\\n            revert InsufficientBalance();\\n        }\\n       bool success =  IERC20(_address).approve(address(this), amount);\\n       if(success){\\n            bool sent = IERC20(_address).transferFrom(msg.sender,recepient,amount);\\n        if(sent){\\n            emit TransactionSuccesful(msg.sender,recepient,amount);\\n        }else{\\n            revert TransactionFailed();\\n        }\\n       }\\n    }\\n\\n\\n}\",\"keccak256\":\"0x881c9d4a40dd66882f7d6f39bd98f3c71954efb79f0f171f06eddbf05c2a993e\",\"license\":\"SEE LICENSE IN LICENSE\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b506040516103eb3803806103eb83398101604081905261002f91610052565b600080546001600160a01b031916331790556001600160a01b0316608052610082565b60006020828403121561006457600080fd5b81516001600160a01b038116811461007b57600080fd5b9392505050565b6080516103416100aa60003960008181605c0152818161010d01526101b901526103416000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80631294d09f14610030575b600080fd5b61004361003e36600461028d565b610045565b005b6040516370a0823160e01b815233600482015282907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156100ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100cf91906102c9565b10156100ee57604051631e9acf1760e31b815260040160405180910390fd5b60405163095ea7b360e01b8152306004820152602481018390526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063095ea7b3906044016020604051808303816000875af115801561015e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061018291906102e2565b90508015610288576040516323b872dd60e01b81523360048201526001600160a01b038381166024830152604482018590526000917f0000000000000000000000000000000000000000000000000000000000000000909116906323b872dd906064016020604051808303816000875af1158015610204573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022891906102e2565b9050801561026d5760405184906001600160a01b0385169033907f76c0a3f47f00bad4b8e1d16b8f5a5b101764c346cf66d85ff0c3618ce00884ef90600090a4610286565b6040516317f2c34560e31b815260040160405180910390fd5b505b505050565b600080604083850312156102a057600080fd5b8235915060208301356001600160a01b03811681146102be57600080fd5b809150509250929050565b6000602082840312156102db57600080fd5b5051919050565b6000602082840312156102f457600080fd5b8151801515811461030457600080fd5b939250505056fea2646970667358221220c1613463fb3de0c179b92b0c72a3ceaab880bfc9ab28b5cca9a276fa281f510864736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c80631294d09f14610030575b600080fd5b61004361003e36600461028d565b610045565b005b6040516370a0823160e01b815233600482015282907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156100ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100cf91906102c9565b10156100ee57604051631e9acf1760e31b815260040160405180910390fd5b60405163095ea7b360e01b8152306004820152602481018390526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063095ea7b3906044016020604051808303816000875af115801561015e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061018291906102e2565b90508015610288576040516323b872dd60e01b81523360048201526001600160a01b038381166024830152604482018590526000917f0000000000000000000000000000000000000000000000000000000000000000909116906323b872dd906064016020604051808303816000875af1158015610204573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022891906102e2565b9050801561026d5760405184906001600160a01b0385169033907f76c0a3f47f00bad4b8e1d16b8f5a5b101764c346cf66d85ff0c3618ce00884ef90600090a4610286565b6040516317f2c34560e31b815260040160405180910390fd5b505b505050565b600080604083850312156102a057600080fd5b8235915060208301356001600160a01b03811681146102be57600080fd5b809150509250929050565b6000602082840312156102db57600080fd5b5051919050565b6000602082840312156102f457600080fd5b8151801515811461030457600080fd5b939250505056fea2646970667358221220c1613463fb3de0c179b92b0c72a3ceaab880bfc9ab28b5cca9a276fa281f510864736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 86,
        "contract": "contracts/BUSDHandler.sol:BUSDHandler",
        "label": "owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      }
    }
  }
}